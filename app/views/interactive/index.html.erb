<%= javascript_include_tag "knockout/knockout.js", "knockout/knockout.map.js", "utils.js" %>

<style>
  input {
    margin-bottom: 0 !important;
  }
  #questions li {
        cursor: pointer;
        background-color: whiteSmoke;
        border: 1px solid #aaa;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
        border-radius: 4px;

        -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        -moz-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);

        -webkit-background-clip: padding-box;
        -moz-background-clip: padding-box;
        background-clip: padding-box;

        margin-bottom: 18px;
        padding: 9px;
  }

  dt {
      float:left;
  }

  dd {
    margin-left: 60px;
  }
</style>
<script type="text/javascript">
  function FriendsViewModel() {
    var self = this;
    self.weibos = ko.observableArray([]);
    self.friends = ko.observableArray([]);
    self.key = ko.observable();
    //  behaviour
    //  helpers
    self.isItemEditing = function (data) {
        return data.is_edit_weibo();
    };

    self.isGetLatestWeibo = function (data) {
        return data.weibo_content()==undefined; //is get latest weibo for cur user
    };

    self.isShowOrginalPic = function (data) {
        return data.is_show_orginal_pic(); //is show  oraginal pic
    };

    self.isShowRepostOrginlPic = function (data) {
        return data.is_show_repost_orginl_pic(); //is show repost oraginal pic
    };

    self.editCommitContent = function (weibo) {
        weibo.commit_type(1);//1:comit 2:repost
        weibo.is_edit_weibo(!weibo.is_edit_weibo());
    };

    self.editRepostContent = function (weibo) {
        weibo.commit_type(2);//1:comit 2:repost
        weibo.is_edit_weibo(!weibo.is_edit_weibo());
    };
    self.isShowOrginal = function(weibo){
        return weibo.thumbnail_pic()!=undefined;
    };
    self.isShowRepostField=function(weibo){
        return weibo.repost_user_name()!=undefined;
    };
    self.showRepostPic  = function (weibo) {
        weibo.is_show_repost_orginl_pic(!weibo.is_show_repost_orginl_pic());
    };

    self.showPic  = function (weibo) {
        weibo.is_show_orginal_pic(!weibo.is_show_orginal_pic());
    };

    self.submitResult = function(weibo, event){
      if(weibo.commit_type()==-1) return;
      if(weibo.commit_type()== 1) self.commitWeibo(weibo, $(event.target));
      else self.repostWeibo(weibo, $(event.target));
    }
    self.commitWeibo = function (weibo, btn){
      if(weibo.weibo_commit_content.trim()=="") {
        alert("评论内容不可为空!");
      } else if(weibo.weibo_content()==undefined) {
        alert("尚未获取最新微博!");
      } else {
        $.ajax({
            url:'/weibo/ajax_comment_weibo.json',
            data: {weibo_id:weibo.weibo_id,commit_content:weibo.weibo_commit_content},
            traditional: true,
            dataType: 'json',
            type: 'GET',
            success: function (data) {
            if(data.status==1) {
               btn.displayInfo({
                status: 1
                , info: '评论成功'
                , callback: function() {
                   weibo.is_edit_weibo(false);
                }
              });
            } else {
              btn.displayInfo({
                status: 0
                , info: '评论失败'
              });
            }
          }
        });
      }
   };

   self.repostWeibo = function (weibo, btn){
      //if(e.weibo_commit_content.trim()=="") alert("转发内容不可为空!");
      if(weibo.weibo_content()==undefined) alert("尚未获取最新微博!");
      weibo_commit_content = weibo.is_original?weibo.weibo_commit_content:weibo.weibo_commit_content+"//@"+weibo.name+":"+weibo.weibo_content();
      console.log(weibo_commit_content);
      $.ajax({
          url:'/weibo/ajax_repost_weibo.json',
          data: {weibo_id:weibo.weibo_id,repost_content:weibo_commit_content},
          traditional: true,
          dataType: 'json',
          type: 'GET',
          success: function (data) {
            if(data.status==1){
               btn.displayInfo({
                status: 1
                , info: '转发成功'
                , callback: function() {
                   weibo.is_edit_weibo(false);
                }
              });
            } else {
              btn.displayInfo({
                status: 0
                , info: '转发失败'
              });
            }
          }
      });
   };

    self.loadFriends = function(weibo, event){
      $(event.target).tab('show');
      $("#ajax_persons_gif").css("display","block");
      self.friends.removeAll();
      
      $.get("/weibo/ajax_get_friends",
         {},
         function(e){
             $("#ajax_persons_gif").css("display","none");
             $.each(e,function(index,user){
                user["weibo_id"] = ko.observable();
                user["weibo_content"] = ko.observable();
                user["weibo_create_time"] = ko.observable();
                user["source"] = ko.observable();
                user["original_pic"] = ko.observable();
                user["thumbnail_pic"] = ko.observable();
                user["repost_text"] = ko.observableArray([]);
                user["repost_user_name"] = ko.observable();
                user["repost_source"] = ko.observable();
                user["repost_create_time"] = ko.observable();
                user["repost_original_pic"] = ko.observable();
                user["repost_thumbnail_pic"] = ko.observable();
                user["is_edit_weibo"] = ko.observable();
                user["is_show_orginal_pic"] = ko.observable();
                user["is_show_repost_orginl_pic"] = ko.observable();
                user["commit_type"] = ko.observable();
                user.is_show_orginal_pic(false);
                user.is_show_repost_orginl_pic(false);
                user.is_edit_weibo(false);//init not edit
                user["weibo_commit_content"] = "";
                user.commit_type(-1); //1:comit 2:repost
                self.friends.push(user);
             });
          },
       "json");
    }

   self.loadFollowers = function(weibo, event){
      $(event.target).tab('show');
      $("#ajax_persons_gif").css("display","block");
      self.friends.removeAll();

      $.get("/weibo/ajax_get_followers",
         {},
         function(e){
             $("#ajax_persons_gif").css("display","none");
             $.each(e,function(index, user){
                  user["weibo_id"] = ko.observable();
                  user["weibo_content"] =  ko.observable();
                  user["weibo_create_time"] =  ko.observable();
                  user["source"] = ko.observable();
                  user["original_pic"] = ko.observable();
                  user["thumbnail_pic"] = ko.observable();
                  user["repost_text"] = ko.observableArray([]);
                  user["repost_user_name"] = ko.observable();
                  user["repost_source"] = ko.observable();
                  user["repost_create_time"] = ko.observable();
                  user["repost_original_pic"] = ko.observable();
                  user["repost_thumbnail_pic"] = ko.observable();
                  user["is_edit_weibo"] = ko.observable();
                  user["is_show_orginal_pic"] = ko.observable();
                  user["is_show_repost_orginl_pic"] = ko.observable();
                  user["commit_type"] = ko.observable();
                  user.is_show_orginal_pic(false);
                  user.is_show_repost_orginl_pic(false);
                  user.is_edit_weibo(false);//init not edit
                  user["weibo_commit_content"] = "";
                  user.commit_type(-1); //1:comit 2:repost
                  self.friends.push(user);
             });
          },
       "json");
    }

    self.getSingleUserLatestWeibo = function (user, event) {
      $(event.target).button('loading');

      $.ajax({
          url:'/weibo/ajax_get_single_user_weibo.json',
          data: {uid:user.id},
          traditional: true,
          dataType: 'json',
          type: 'GET',
          success: function (data) {
            $.each(data,function(index, weibo){
                $(event.target).button('reset');

                user["is_original"] = weibo.retweeted_status== undefined ? true:false;
                user.weibo_id(weibo.id);
                user.weibo_content(weibo.text);
                user.weibo_create_time((new Date(weibo.created_at.replace('+0800', 'UTC+0800'))).toNiceTime());
                user.source(weibo.source);
                user.original_pic(weibo.original_pic);
                user.thumbnail_pic(weibo.thumbnail_pic);
                if(weibo.retweeted_status!= undefined){ //repost
                  user.repost_text(weibo.retweeted_status.text);
                  user.repost_user_name(weibo.retweeted_status.user.name);
                  user.repost_source(weibo.retweeted_status.source);
                  user.repost_create_time((new Date(weibo.retweeted_status.created_at.replace('+0800', 'UTC+0800'))).toNiceTime());
                  user.repost_original_pic(weibo.retweeted_status.original_pic);
                  user.repost_thumbnail_pic(weibo.retweeted_status.thumbnail_pic);
                }
            });
          }
      });
    }

    self.searchName = function(){
      if(self.key().trim()==""){
        $.each($('dl.feed_list'),function(index,item){
          item.style.display = "";
        });
        return;
      };

      $('dl.feed_list').each(function(index,item){
        var _item = $(item)
        if( $(_item
                  .find('.screen_name'))
                  .html()
                  .indexOf(self.key())>=0)
          item.style.display = "";
        else item.style.display = "none";
      });
    }
  }

  function getLatestWeibo(){
      $.get("/weibo/ajax_get_friends_latest_weibo",
         {},
         function(e){
            // console.log(e);
          },
       "json");
  }

  function loading_person(){
    $("#ajax_persons_gif").css("display","block");
  };




$(document).ready(function() {
    var model = new FriendsViewModel();
    // model.loadFriends();
    ko.applyBindings(model);
});

</script>

<div class="row-fluid" >
  <div class="span3">
               <ul class="nav  nav-pills nav-stacked" style="margin-top:40px;">
                    <li class="">
                      <a href="/search">微博搜人</a> 
                    </li>
                    <li class="">
                      <a href="/follow">关注工具</a> 
                    </li>
                    <li class="active">
                      <a href="#">实时互动</a> 
                    </li>
                    <li class="">
                      <a href="/lbs">LBS工具</a> 
                    </li>
                    <li class="">
                      <a href="/repost/setting">定时转发</a> 
                    </li>
                    <li class="">
                      <a href="/push">精准推送</a> 
                    </li>
                    <li class="">
                      <a href="/competitor">竞品分析</a> 
                    </li>
                </ul>
      </div>
          <div class="span9">
            <ul id="tabs" class="nav nav-tabs">
              <li>
                <a data-bind="click: $root.loadFriends">关注的最新微博</a>
              </li>
              <li>
                <a data-bind="click: $root.loadFollowers">粉丝的最新微博</a>
              </li>
              <li style="float:right; line-height: 44px;">
                <span>名字关键词:</span>
                <input type="text" class="input-small" placeHolder="关键词" data-bind="value:key">
                <button class="btn btn-primary" data-bind="click: $root.searchName">搜索</button>
              </li>
            </ul>
            <div style="clear:both;"></div>
            <!-- list -->
            <div id="ajax_persons_gif" style = "display:none; text-align: center; margin-top: 40px;">
              <img src ="images/ajax_load.gif"></img>
            </div>
            <div class="main-content">
              <div id="weibo_list" style="display:''">
                <div class="feed_lists W_linka W_texta" pagenum="1" node-type="feed_list" data-bind="foreach: friends">
                  <dl action-type="feed_list_item" class="feed_list W_linecolor clearfix">
                    <!-- <div class="people"> -->
                      <dt class="face">
                        <img alt="" style="max-width:50px;" data-bind = "attr: { src: profile_image_url}">
                      </dt>
                      <dd class="content">
                        <p node-type="feed_list_content">
                          <a class="screen_name" data-bind = "text:screen_name"></a>：
                          <span data-bind = "text:weibo_content"></span>
                        </p>
                        <ul class="piclist" node-type="feed_list_media_prev" data-bind="visible:$root.isShowOrginal($data)">
                          <img alt="" data-bind = "visible:!$root.isShowOrginalPic($data),click: $parent.showPic,attr: { src: thumbnail_pic}" >
                          <img alt="" data-bind = "visible: $root.isShowOrginalPic($data),click: $parent.showPic,attr: { src: original_pic}" >
                        </ul>
                        <dl class="comment W_textc W_linecolor W_bgcolor" data-bind="visible:$root.isShowRepostField($data)">
                          <dt node-type="feed_list_forwardContent">
                            <a span data-bind = "text:repost_user_name"></a>
                            <em data-bind = "text:repost_text"></em>
                          </dt>
                          <dd node-type="feed_list_media_prev">
                            <img alt="" data-bind = "visible:!$root.isShowRepostOrginlPic($data),click: $parent.showRepostPic,attr: { src: repost_thumbnail_pic}">
                            <img alt="" data-bind = "visible: $root.isShowRepostOrginlPic($data),click: $parent.showRepostPic, attr: { src: repost_original_pic}">
                          </dd>
                        </dl>
                        <p class="info W_linkb W_textb">
                          <span>
                            <a data-bind="click: $parent.editRepostContent">转发</a><i class="W_vline">|</i>
                            <a data-bind="click: $parent.editCommitContent">评论</a>
                          </span>
                          <a data-bind = "text:weibo_create_time"></a>
                          来自<a data-bind = "html:source"></a>
                        </p>
                        <p data-bind="visible: $root.isItemEditing($data)">
                          <textarea  style="width: 100%;" row="3" data-bind="value:weibo_commit_content">
                          </textarea>
                          <br>
                          <button class="btn btn-primary" data-bind="click:$parent.submitResult">提交</button>
                        </p>
                        <p id="get_new_weibo"><button class="btn btn-primary"  data-bind="visible: $root.isGetLatestWeibo($data),click: $parent.getSingleUserLatestWeibo">获取最新微博</button></p>
                      </dd>
                  </dl>
                  </div>
                </div>
              </div> 
            </div>
          </div>
      </div>
      


  



